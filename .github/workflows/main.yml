name: Main

on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache .vscode-test
        uses: actions/cache@v3
        with:
          path: .vscode-test
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Static checks
        run: |
          npm run spellcheck
          npm run lint
        if: matrix.os == 'ubuntu-latest'
      - run: xvfb-run -a npm test
        if: matrix.os == 'ubuntu-latest'
      - run: npm test
        if: matrix.os != 'ubuntu-latest'
      - name: Release
        if: matrix.os == 'ubuntu-latest'
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PAT }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: npx semantic-release
      - name: Package
        if: github.ref != 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: lannonbr/vsce-action@master
        with:
          args: "package"
      - name: Upload
        if: github.ref != 'refs/heads/master' && matrix.os == 'ubuntu-latest' && !env.ACT
        uses: actions/upload-artifact@v3
        with:
          name: vscode-package
          path: parquet-viewer-*.vsix
